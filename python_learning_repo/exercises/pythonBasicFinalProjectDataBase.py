# Python综合编程题：学生成绩分析系统
# 题目描述
# 请你编写一个学生成绩分析系统，要求实现以下功能：
# 使用集合类型存储课程信息
# 使用序列类型（列表/元组）存储学生信息和成绩
# 使用映射类型（字典）建立学生与成绩的映射关系
# 定义函数实现各项功能，并注意代码复用
# 功能要求
# 1. 数据定义
# 定义一个课程集合，包含至少5门课程
# 定义一个学生列表，每个学生是一个元组，包含学号、姓名、班级
# 定义一个成绩字典，键为学生学号，值为该学生各科成绩的字典
# 2. 功能函数
# 实现以下函数：
# # 添加学生成绩
# def add_grade(student_id, course, score, grade_dict):
#     # 如果学生不存在，提示先添加学生信息
#     # 如果课程不存在，提示无效课程
#     # 添加或更新成绩
#     pass
#
# # 计算学生平均分
# def calculate_average(student_id, grade_dict):
#     # 返回该学生的平均分
#     pass
#
# # 查找课程最高分和最低分
# def find_course_extremes(course, grade_dict):
#     # 返回该课程的最高分、最低分及对应学生
#     pass
#
# # 统计班级平均分
# def calculate_class_average(class_name, students, grade_dict):
#     # 计算指定班级所有学生的平均分
#     pass
#
# # 生成成绩报告
# def generate_report(students, grade_dict, courses):
#     # 生成包含以下内容的报告：
#     # 1. 每个学生的各科成绩和平均分
#     # 2. 每门课程的最高分、最低分和平均分
#     # 3. 按平均分排序的学生排名
#     pass
# 3. 主程序
# 编写主程序，实现以下交互功能：
# 显示菜单选项
# 根据用户选择调用相应函数
# 提供添加成绩、查询成绩、生成报告等功能
# 示例数据
# # 课程集合
# courses = {"数学", "语文", "英语", "物理", "化学"}
#
# # 学生列表（学号, 姓名, 班级）
# students = [
#     ("001", "张三", "一班"),
#     ("002", "李四", "一班"),
#     ("003", "王五", "二班"),
#     ("004", "赵六", "二班")
# ]
#
# # 成绩字典示例结构
# # {
# #     "001": {"数学": 85, "语文": 92, "英语": 78},
# #     "002": {"数学": 90, "语文": 88, "英语": 95},
# #     ...
# # }
# 评分标准
# 集合使用（20分）：正确使用集合存储课程信息，实现课程验证
# 序列类型使用（20分）：合理使用列表和元组存储学生信息
# 映射类型使用（20分）：正确使用字典建立学生与成绩的映射关系
# 函数定义与复用（20分）：函数设计合理，参数和返回值恰当，代码复用性好
# 功能完整性与正确性（20分）：所有功能实现正确，程序运行无错误
# 扩展挑战（可选）
# 添加异常处理，处理无效输入
# 实现数据持久化，将数据保存到文件
# 添加图形用户界面
# 实现成绩分析图表生成
# 请根据以上要求完成编程任务，注意代码规范和注释。